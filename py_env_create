#!/bin/bash
#
# py_env_create -- setup the python environment in order to use CTSM python tools
#
# Simple bash script to setup the python environment for the user so they can run the CTSM
# python tools using "conda".
#
dir=${0%/*}
if [ "$dir" = "$0" ];then
  dir="."
fi

# Check if conda is in your path
conda --help >& condahelp.txt
error=$?
if [ $error != 0 ]; then
   echo "conda is NOT in your path for the bash shell add it with modules or whatever is required on your system to get it in your path"
   echo "on cheyenne/capser/etc use -- module load conda"
   echo "on izumi/CGD systems use -- module load lang/python"
   echo "For notes on installing on a user system see: https://docs.conda.io/projects/conda/en/latest/user-guide/install/index.html"
   echo "Error code was $error"
   cat condahelp.txt
   rm condahelp.txt
   exit -1
fi
rm condahelp.txt
ctsm_python=ctsm_pylib
condalockenv=condalock


condadir="$dir/python"

domain=`domainname`
platform="linux-64"
condalockenvfile="conda_env_condalock.txt"
if [[ $domain =~ cgd.* ]]; then
   condafile="conda_env_ctsm_py_cgd.txt"
   lockfile="conda_lock_ctsm_py_cgd_${platform}.yml"
else
   condafile="conda_env_ctsm_py.txt"
   lockfile="conda_lock_ctsm_py_${platform}.yml"
fi
#----------------------------------------------------------------------
# Usage subroutine
usage() {
  echo ""
  echo "***********************************************************************"
  echo "usage:"
  echo "./py_env_create"
  echo ""
  echo "valid arguments: "
  echo "[-h|--help]  "
  echo "     Displays this help message"
  echo "[-v|--verbose]  "
  echo "     Run with verbose mode for the install so you see the progress bar"
  echo "[-f|--file <file>]  "
  echo "     Conda environment requirements text file to use (text format)"
  echo "     Assumed to be under the directory: $condadir"
  echo "     Default is: $condafile"
  echo "[-l|--read-lock] "
  echo "     Read the conda-lock file for this platform rather than the requirements file"
  echo "     The lock file will be faster and is less likely to run into conflicts."
  echo "     You must have run this script previously to get an environemnt with conda-lock installed."
  echo "     Will use: $condadir/$lockfile if it exists"
  echo "[--write-lock] "
  echo "     Write the conda-lock file for this platform"
  echo "[--option <option>]  "
  echo "     Option(s) to pass to 'conda install' step"
  echo "***********************************************************************"
}

verbose="No"
readlock="No"
writelock="No"
option=""
while [ $# -gt 0 ]; do
   case $1 in
       -h|--help )
           usage
           exit 0
           ;;
       -v|--verbose )
           verbose="Yes"
           ;;
       -f|--file )
           condafile=$2
           shift
           ;;
       -l|--read-lock )
           readlock="Yes"
           ;;
       --write-lock )
           writelock="Yes"
           ;;
       --option )
           option=$2
           shift
           ;;
       * )
           echo "ERROR:: invalid argument sent in: $2"
           usage
           exit 1
           ;;
   esac
   shift
done

#
# Error checking options and setup
#
if [ "$readlock" == "Yes" ]; then
   if [ "$writelock" == "Yes" ]; then
      echo "Do NOT use the --read-lock and --write-lock option at the same time"
      exit -1
   fi
   # Check if conda-lock is in your path
   conda-lock --help >& /dev/null
   error=$?
   if [ $error != 0 ]; then
      # conda init bash may be required to activate the environemnt
      conda init bash
      cmd="conda activate $condalockenv"
      echo $cmd
      $cmd
      if [ $? != 0 ]; then
          echo "WARNING: Trouble activating the $condalockenv python environment"
          echo "         In general you need to have run this script before so that the environment is setup"
          echo "We will attempt to install now..."
          cmd="conda install --yes --quiet --mkdir --channel conda-forge --name $condalockenv --file $condadir/$condalockenvfile"
          echo "$cmd"
          $cmd
          if [ $? != 0 ]; then
             echo "Trouble setting up $condalockenv"
             if [[ $domain =~ cgd.* ]]; then
                 pythonpath=`which python`
                 echo
                 echo "On CGD systems you may need to do the following..."
                 echo "Create a bin subdirectory and then link the python version into it..."
                 echo "   mkdir $HOME/.conda/envs/$condalockenv/bin/"
                 echo "   ln -s $pythonpath $HOME/.conda/envs/$condalockenv/bin/python3.7"
                 echo
             fi
             exit -1
          fi
          cmd="conda activate $condalockenv"
          echo $cmd
          $cmd
          if [ $? != 0 ]; then
             echo "Trouble activating $condalockenv"
             exit -1
          fi
      fi
      cmd="conda deactivate"
      $cmd
   fi
   condafilepath="$condadir/$lockfile"
   if [ ! -f $condafilepath ]; then
      echo "$condafilepath does NOT exist"
      echo "The --read-lock option can NOT find a lock file to use"
      echo "You'll have to run without this option."
      exit -1
   fi
else
   condafilepath="$condadir/$condafile"
   if [ ! -f $condafilepath ]; then
      echo "$condafilepath does NOT exist"
      echo "Use the --file option with a valid filename"
      exit -1
   fi
fi

echo "Use conda to install the python environment needed to run the CTSM python tools in the conda environment: $ctsm_python"
echo "Using the file: $condafilepath"

#
# Check if the environment already exists, if it does continue, if not create it
#
conda list -n $ctsm_python >& /dev/null
if [ $? != 0 ]; then
   echo "Create $ctsm_python"
   cmd="conda create --force --name $ctsm_python --quiet"
   echo "$cmd"
   $cmd
   if [ $? != 0 ]; then
      echo "Error creating conda environment $ctsm_python"
      exit -1
   fi
else
   echo "$ctsm_python environment already exists"
fi
#
# Install the environemnt
#
echo "Install $ctsm_python this can take a long time, be patient...."
if [ "$readlock" != "Yes" ]; then
    echo "    If this seems to be hanging (taking hours) or it aborts with an error -- retry using the --read-lock option"
fi
echo "    ...."
echo "    ...."
echo "    ...."
verbosity="--quiet"
loglevel="ERROR"
if [ "$verbose" == "Yes" ]; then
  verbosity="--verbose"
  loglevel="INFO"
fi
if [ "$readlock" == "Yes" ]; then
   echo "Remove the $ctsm_python environment so we can install entirely from the conda-lock file"
   cmd="conda env remove --name $ctsm_python --quiet"
   $cmd
   if [ $? != 0 ]; then
      echo "Trouble removing the $ctsm_python python environment which needs to be done before installing the lock file"
      exit -2
   fi
   cmd="conda-lock install --log-level $loglevel --no-validate-platform --name $ctsm_python $condafilepath"
else
   cmd="conda install --yes $verbosity --channel conda-forge --name $ctsm_python --file $condafilepath $option"
fi
echo "$cmd"
$cmd
if [ $? != 0 ]; then
   echo "Trouble installing the $ctsm_python python environment"
   echo "There must be a problem in the $condafilepath conda specification environment file"
   echo "Change the file and try again"
   if [[ $domain =~ cgd.* ]]; then
       pythonpath=`which python`
       echo
       echo "On CGD systems you may need to do the following..."
       echo "Create a bin subdirectory and then link the python version into it..."
       echo "   mkdir $HOME/.conda/envs/$ctsm_python/bin/"
       echo "   ln -s $pythonpath $HOME/.conda/envs/$ctsm_python/bin/python3.7"
       echo
   fi
   exit -2
fi
#
# Install the condalock environemnt, needed if you want to read the conda-lock file (the --read-lock option)
#
echo "Installing the $condalockenv environment, so that you can use the --read-lock option later"
cmd="conda install --yes $verbosity --mkdir --channel conda-forge --name $condalockenv --file $condadir/$condalockenvfile"
$cmd
if [ $? != 0 ]; then
   echo "Trouble installing the $condalockenv python environment"
   exit -2
fi

#
# Report on success
#
echo "Successfully installed the $ctsm_python python environment"
echo
echo "activate the environment by doing the following..."
echo "conda activate $ctsm_python"


#
# Write the lock file out if asked for
#
if [ "$writelock" == "Yes" ]; then
   echo "Write the conda-lock as asked for by the --write-lock option"
   # conda init bash may be required to activate the environemnt
   conda init bash
   conda activate $condalockenv
   if [ $? != 0 ]; then
      echo "Trouble activating $condalockenv"
      exit -3
   fi
   cmd="conda-lock --platform $platform --lockfile $condadir/$lockfile --log-level $loglevel"
   echo "$cmd"
   $cmd
   if [ $? != 0 ]; then
      echo "Trouble writing the $ctsm_python python environment lock file"
      exit -3
   else
      echo "Successfully wrote out the lock file for $platform"
   fi
   cmd="conda deactivate"
   $cmd
fi
